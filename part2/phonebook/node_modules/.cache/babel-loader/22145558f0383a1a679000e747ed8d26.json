{"ast":null,"code":"var _jsxFileName = \"/home/beto/Documentos/FullStack/part2/phonebook/src/components/Persons.js\";\nimport React from 'react';\n\nconst Persons = ({\n  persons,\n  filterPar\n}) => {\n  const personsToShow = persons => {\n    if (filterPar === \"\") {\n      return persons;\n    } else {\n      let filterParUpper = filterPar.toUpperCase();\n      let newlist = persons.filter(element => element.name.toUpperCase().search(filterParUpper) > -1);\n      return newlist;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, personsToShow(persons).map(element => /*#__PURE__*/React.createElement(\"li\", {\n    key: element.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 43\n    }\n  }, element.name + \"  \" + element.number)));\n};\n\nexport default Persons;","map":{"version":3,"sources":["/home/beto/Documentos/FullStack/part2/phonebook/src/components/Persons.js"],"names":["React","Persons","persons","filterPar","personsToShow","filterParUpper","toUpperCase","newlist","filter","element","name","search","map","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AACxC,QAAMC,aAAa,GAAIF,OAAD,IAAY;AACjC,QAAIC,SAAS,KAAG,EAAhB,EAAoB;AACnB,aAAOD,OAAP;AACA,KAFD,MAGK;AACJ,UAAIG,cAAc,GAAGF,SAAS,CAACG,WAAV,EAArB;AACA,UAAIC,OAAO,GAAGL,OAAO,CAACM,MAAR,CAAgBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaJ,WAAb,GAA2BK,MAA3B,CAAkCN,cAAlC,IAAkD,CAAC,CAA/E,CAAd;AACA,aAAOE,OAAP;AACA;AACD,GATD;;AAWA,sBACC,0CACEH,aAAa,CAACF,OAAD,CAAb,CAAuBU,GAAvB,CAA4BH,OAAD,iBAAW;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,OAAO,CAACC,IAAR,GAAa,IAAb,GAAkBD,OAAO,CAACI,MAAlD,CAAtC,CADF,CADD;AAKA,CAjBD;;AAmBA,eAAeZ,OAAf","sourcesContent":["import React from 'react'\n\nconst Persons = ({persons, filterPar}) =>{\n\tconst personsToShow = (persons) =>{\n\t\tif (filterPar===\"\") {\n\t\t\treturn persons\n\t\t}\n\t\telse {\n\t\t\tlet filterParUpper = filterPar.toUpperCase()\n\t\t\tlet newlist = persons.filter((element) => element.name.toUpperCase().search(filterParUpper)>-1)\n\t\t\treturn newlist\n\t\t}\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t{personsToShow(persons).map((element)=><li key={element.name}>{element.name+\"  \"+element.number}</li>)}\n\t\t</>\n\t)\n}\n\nexport default Persons"]},"metadata":{},"sourceType":"module"}