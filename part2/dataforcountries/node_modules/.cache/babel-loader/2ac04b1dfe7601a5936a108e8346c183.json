{"ast":null,"code":"var _jsxFileName = \"/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst WEATHER_API_KEY = \"55dbce230d6ed0e4a89f35dc8fb8afbf\";\n\nconst Weather = props => {\n  const [weather, setWeather] = useState({});\n  const [completed, setCompleted] = useState(false);\n\n  const getWeather = () => {\n    axios.get(`http://api.weatherstack.com/current?access_key=${WEATHER_API_KEY}&query=${props.country.capital}`).then(response => {\n      console.log(response.data);\n      setWeather(response.data);\n      setCompleted(true);\n    }).catch(error => {\n      console.log(error);\n      setCompleted(false);\n    });\n  };\n\n  useEffect(getWeather, []);\n  return completed ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, \"Weather in \", props.country.capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"temperature:\"), \" \", weather.current.temperature, \" celsius\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: weather.current.weather_icons[0],\n    alt: \"Sky Representation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"wind:\"), \" \", weather.current.wind_speed, \" kph direction \", weather.current.wind_dir)) : null;\n};\n\nconst Content = props => {\n  const countriesToShow = () => {\n    if (props.filterPar === \"\") {\n      return props.countries;\n    } else {\n      let filterParUpper = props.filterPar.toUpperCase();\n      let newlist = props.countries.filter(element => element.name.toUpperCase().search(filterParUpper) > -1);\n      return newlist;\n    }\n  };\n\n  const showData = country => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, country.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }\n    }, \"capital \", country.capital), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, \"population \", country.population), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, country.languages.map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 39\n      }\n    }, element.name))), /*#__PURE__*/React.createElement(\"img\", {\n      src: country.flag,\n      alt: \"Country Flag\",\n      width: \"300\",\n      height: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      country: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }));\n  };\n\n  if (countriesToShow().length === 1) {\n    return showData(countriesToShow()[0]);\n  } else if (props.showButton !== \"\") {\n    return showData(countriesToShow().filter(element => element.name === props.showButton)[0]);\n  } else if (countriesToShow().length <= 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, countriesToShow().map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }, element.name, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        props.setShowButton(element.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 83\n      }\n    }, \"show\"))), \" \");\n  } else if (countriesToShow().length > 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }\n    }, \"Too many matches, specify another filter\");\n  }\n};\n\nconst App = () => {\n  const [filterPar, setFilterPar] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [showButton, setShowButton] = useState(\"\");\n\n  const getCountries = () => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data));\n  };\n\n  const changeFilterPar = event => {\n    setFilterPar(event.target.value);\n    setShowButton(\"\");\n  };\n\n  useEffect(getCountries, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: filterPar,\n    onChange: changeFilterPar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    countries: countries,\n    filterPar: filterPar,\n    setShowButton: setShowButton,\n    showButton: showButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js"],"names":["React","useState","useEffect","axios","WEATHER_API_KEY","Weather","props","weather","setWeather","completed","setCompleted","getWeather","get","country","capital","then","response","console","log","data","catch","error","current","temperature","weather_icons","wind_speed","wind_dir","Content","countriesToShow","filterPar","countries","filterParUpper","toUpperCase","newlist","filter","element","name","search","showData","population","languages","map","flag","length","showButton","setShowButton","App","setFilterPar","setCountries","getCountries","changeFilterPar","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst WEATHER_API_KEY=\"55dbce230d6ed0e4a89f35dc8fb8afbf\"\n\nconst Weather = (props) =>{\n\tconst [weather, setWeather] = useState({})\n\tconst [completed,setCompleted] = useState(false)\n\t\n\tconst getWeather = () =>{\n\t\taxios.get(`http://api.weatherstack.com/current?access_key=${WEATHER_API_KEY}&query=${props.country.capital}`)\n\t\t.then(response => {\n\t\t\tconsole.log(response.data)\n\t\t\tsetWeather(response.data)\n\t\t\tsetCompleted(true)\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error)\n\t\t\tsetCompleted(false)\n\t\t})\n\t}\n\n\tuseEffect(getWeather,[])\n\treturn completed ? (\n\t\t<>\n\t\t\t<h3>Weather in {props.country.capital}</h3>\n\t\t\t<p>\n\t\t\t\t<strong>temperature:</strong> {weather.current.temperature} celsius\n\t\t\t</p>\n\t\t\t<img src={weather.current.weather_icons[0]} alt={\"Sky Representation\"}/>\n\t\t\t<p>\n\t\t\t\t<strong>wind:</strong> {weather.current.wind_speed} kph direction {weather.current.wind_dir}\n\t\t\t</p>\n\t\t</>\n\t) : null \n}\n\nconst Content = (props) =>{\n\tconst countriesToShow = () =>{\n\t\tif (props.filterPar===\"\") {\n\t\t\treturn props.countries\n\t\t}\n\t\telse {\n\t\t\tlet filterParUpper = props.filterPar.toUpperCase()\n\t\t\tlet newlist = props.countries.filter(element => element.name.toUpperCase().search(filterParUpper)>-1)\n\t\t\treturn newlist\n\t\t}\n\t}\n\tconst showData = (country) =>{ \n\t\treturn(\n\t\t\t<>\n\t\t\t<h1>{country.name}</h1>\n\t\t\t<div>capital {country.capital}</div>\n\t\t\t<div>population {country.population}</div>\n\t\t\t<h2>languages</h2>\n\t\t\t<ul>\n\t\t\t\t{country.languages.map(element => <li key={element.name}>{element.name}</li>)}\n\t\t\t</ul>\n\t\t\t<img src={country.flag} alt=\"Country Flag\" width=\"300\" height=\"200\"/>\n\t\t\t<Weather country={country}/>\n\t\t\t</>\n\t\t)\n\t}\n\n\tif (countriesToShow().length===1) {\n\t\treturn (showData(countriesToShow()[0]))\n\t}\n\telse if (props.showButton!==\"\"){\n\t\treturn (showData(countriesToShow().filter(element => element.name===props.showButton )[0]))\n\t}\n\telse if (countriesToShow().length<=10){\n\t\treturn(\n\t\t\t<div>{countriesToShow().map((element) => <li key={element.name}>{element.name} <button onClick={() => {\n\t\t\t\tprops.setShowButton(element.name)\n\t\t\t}}>show</button></li>)} </div>\n\t\t)\n\t}\n\telse if (countriesToShow().length>10) {\n\t\treturn(\n\t\t\t<div>Too many matches, specify another filter</div>\n\t\t)\n\t}\n}\n\nconst App = () => {\n\tconst [filterPar,setFilterPar] = useState(\"\")\n\tconst [countries,setCountries] = useState([])\n\tconst [showButton, setShowButton] = useState(\"\")\n\n\tconst getCountries = () => {\n\t\taxios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data))\n\t}\n\n\tconst changeFilterPar = (event) =>{\n\t\tsetFilterPar(event.target.value)\n\t\tsetShowButton(\"\")\n\t}\n\n\tuseEffect(getCountries, [])\n\n\treturn(\n\t\t<div>\n\t\t\t<div>find countries <input value={filterPar} onChange={changeFilterPar}/></div>\n\t\t\t<Content countries={countries} filterPar={filterPar} setShowButton={setShowButton} showButton={showButton}/>\n\t\t</div>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}