{"ast":null,"code":"var _jsxFileName = \"/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Content = props => {\n  const countriesToShow = () => {\n    if (props.filterPar === \"\") {\n      return props.countries;\n    } else {\n      let filterParUpper = props.filterPar.toUpperCase();\n      let newlist = props.countries.filter(element => element.name.toUpperCase().search(filterParUpper) > -1);\n      return newlist;\n    }\n  };\n\n  const showData = country => {\n    let a = axios.get(`http://api.weatherstack.com/current?access_key=${\"68a86f235a64890adc1a0b825a8ea2c6\"}&query=${country.capital}`);\n    console.log(a);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }\n    }, country.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, \"capital \", country.capital), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }\n    }, \"population \", country.population), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    }, country.languages.map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 39\n      }\n    }, element.name))), /*#__PURE__*/React.createElement(\"img\", {\n      src: country.flag,\n      alt: \"Country Flag\",\n      width: \"300\",\n      height: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, \"Weather in \", country.capital));\n  };\n\n  if (countriesToShow().length === 1) {\n    return showData(countriesToShow()[0]);\n  } else if (props.test !== \"\") {\n    return showData(countriesToShow().filter(element => element.name === props.test)[0]);\n  } else if (countriesToShow().length <= 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, countriesToShow().map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    }, element.name, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => props.setTest(element.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 83\n      }\n    }, \"show\"))), \" \");\n  } else if (countriesToShow().length > 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, \"Too many matches, specify another filter\");\n  }\n};\n\nconst App = () => {\n  const [filterPar, setFilterPar] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [showButton, setShowButton] = useState(\"\");\n\n  const getCountries = () => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data));\n  };\n\n  const changeFilterPar = event => {\n    setFilterPar(event.target.value);\n    setShowButton(\"\");\n  };\n\n  useEffect(getCountries, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: filterPar,\n    onChange: changeFilterPar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    countries: countries,\n    filterPar: filterPar,\n    setTest: setShowButton,\n    test: showButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js"],"names":["React","useState","useEffect","axios","Content","props","countriesToShow","filterPar","countries","filterParUpper","toUpperCase","newlist","filter","element","name","search","showData","country","a","get","capital","console","log","population","languages","map","flag","length","test","setTest","App","setFilterPar","setCountries","showButton","setShowButton","getCountries","then","response","data","changeFilterPar","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Content = (props) =>{\n\tconst countriesToShow = () =>{\n\t\tif (props.filterPar===\"\") {\n\t\t\treturn props.countries\n\t\t}\n\t\telse {\n\t\t\tlet filterParUpper = props.filterPar.toUpperCase()\n\t\t\tlet newlist = props.countries.filter(element => element.name.toUpperCase().search(filterParUpper)>-1)\n\t\t\treturn newlist\n\t\t}\n\t}\n\tconst showData = (country) =>{\n\t\tlet a = axios.get(`http://api.weatherstack.com/current?access_key=${\"68a86f235a64890adc1a0b825a8ea2c6\"}&query=${country.capital}`)\n\t\tconsole.log(a)\n\t\treturn(\n\t\t\t<>\n\t\t\t<h1>{country.name}</h1>\n\t\t\t<div>capital {country.capital}</div>\n\t\t\t<div>population {country.population}</div>\n\t\t\t<h2>languages</h2>\n\t\t\t<ul>\n\t\t\t\t{country.languages.map(element => <li key={element.name}>{element.name}</li>)}\n\t\t\t</ul>\n\t\t\t<img src={country.flag} alt=\"Country Flag\" width=\"300\" height=\"200\"/>\n\t\t\t<h2>Weather in {country.capital}</h2>\n\t\t\t\n\t\t\t</>\n\t\t)\n\t}\n\n\tif (countriesToShow().length===1) {\n\t\treturn (showData(countriesToShow()[0]))\n\t}\n\telse if (props.test!==\"\"){\n\t\treturn (showData(countriesToShow().filter(element => element.name===props.test )[0]))\n\t}\n\telse if (countriesToShow().length<=10){\n\t\treturn(\n\t\t\t<div>{countriesToShow().map((element) => <li key={element.name}>{element.name} <button onClick={() => props.setTest(element.name)}>show</button></li>)} </div>\n\t\t)\n\t}\n\telse if (countriesToShow().length>10) {\n\t\treturn(\n\t\t\t<div>Too many matches, specify another filter</div>\n\t\t)\n\t}\n}\n\nconst App = () => {\n\tconst [filterPar,setFilterPar] = useState(\"\")\n\tconst [countries,setCountries] = useState([])\n\tconst [showButton, setShowButton] = useState(\"\")\n\n\tconst getCountries = () => {\n\t\taxios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data))\n\t}\n\n\tconst changeFilterPar = (event) =>{\n\t\tsetFilterPar(event.target.value)\n\t\tsetShowButton(\"\")\n\t}\n\n\tuseEffect(getCountries, [])\n\n\treturn(\n\t\t<div>\n\t\t\t<div>find countries <input value={filterPar} onChange={changeFilterPar}/></div>\n\t\t\t<Content countries={countries} filterPar={filterPar} setTest={setShowButton} test={showButton}/>\n\t\t</div>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}