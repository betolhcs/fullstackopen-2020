{"ast":null,"code":"var _jsxFileName = \"/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Content = props => {\n  const countriesToShow = () => {\n    if (props.filterPar === \"\") {\n      return props.countries;\n    } else {\n      let filterParUpper = props.filterPar.toUpperCase();\n      let newlist = props.countries.filter(element => element.name.toUpperCase().search(filterParUpper) > -1);\n      return newlist;\n    }\n  };\n\n  const showData = country => {\n    const getWeather = () => {\n      axios.get(`http://api.weatherstack.com/current?access_key=${\"55dbce230d6ed0e4a89f35dc8fb8afbf\"}&query=${country.capital}`).then(element => props.setWeather(element.data)).catch(error => console.log(error));\n    };\n\n    useEffect(getWeather);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }\n    }, country.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }\n    }, \"capital \", country.capital), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 4\n      }\n    }, \"population \", country.population), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 4\n      }\n    }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }, country.languages.map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 39\n      }\n    }, element.name))), /*#__PURE__*/React.createElement(\"img\", {\n      src: country.flag,\n      alt: \"Country Flag\",\n      width: \"300\",\n      height: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, \"Weather in \", country.capital), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, \"temperature: \", props.weather.data.temperature, \" \"));\n  };\n\n  if (countriesToShow().length === 1) {\n    return showData(countriesToShow()[0]);\n  } else if (props.showButton !== \"\") {\n    return showData(countriesToShow().filter(element => element.name === props.showButton)[0]);\n  } else if (countriesToShow().length <= 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, countriesToShow().map(element => /*#__PURE__*/React.createElement(\"li\", {\n      key: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }\n    }, element.name, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => props.setShowButton(element.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 83\n      }\n    }, \"show\"))), \" \");\n  } else if (countriesToShow().length > 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, \"Too many matches, specify another filter\");\n  }\n};\n\nconst App = () => {\n  const [filterPar, setFilterPar] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [showButton, setShowButton] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n\n  const getCountries = () => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data));\n  };\n\n  const changeFilterPar = event => {\n    setFilterPar(event.target.value);\n    setShowButton(\"\");\n  };\n\n  useEffect(getCountries, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: filterPar,\n    onChange: changeFilterPar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    countries: countries,\n    filterPar: filterPar,\n    setShowButton: setShowButton,\n    showButton: showButton,\n    setWeather: setWeather,\n    weather: weather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js"],"names":["React","useState","useEffect","axios","Content","props","countriesToShow","filterPar","countries","filterParUpper","toUpperCase","newlist","filter","element","name","search","showData","country","getWeather","get","capital","then","setWeather","data","catch","error","console","log","population","languages","map","flag","weather","temperature","length","showButton","setShowButton","App","setFilterPar","setCountries","getCountries","response","changeFilterPar","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Content = (props) =>{\n\tconst countriesToShow = () =>{\n\t\tif (props.filterPar===\"\") {\n\t\t\treturn props.countries\n\t\t}\n\t\telse {\n\t\t\tlet filterParUpper = props.filterPar.toUpperCase()\n\t\t\tlet newlist = props.countries.filter(element => element.name.toUpperCase().search(filterParUpper)>-1)\n\t\t\treturn newlist\n\t\t}\n\t}\n\tconst showData = (country) =>{ \n\t\tconst getWeather = () =>{\n\t\t\taxios.get(`http://api.weatherstack.com/current?access_key=${\"55dbce230d6ed0e4a89f35dc8fb8afbf\"}&query=${country.capital}`)\n\t\t\t.then(element => props.setWeather(element.data)).catch(error => console.log(error))\n\t\t}\n\n\t\tuseEffect(getWeather)\n\n\t\treturn(\n\t\t\t<>\n\t\t\t<h1>{country.name}</h1>\n\t\t\t<div>capital {country.capital}</div>\n\t\t\t<div>population {country.population}</div>\n\t\t\t<h2>languages</h2>\n\t\t\t<ul>\n\t\t\t\t{country.languages.map(element => <li key={element.name}>{element.name}</li>)}\n\t\t\t</ul>\n\t\t\t<img src={country.flag} alt=\"Country Flag\" width=\"300\" height=\"200\"/>\n\t\t\t<h2>Weather in {country.capital}</h2>\n\t\t\t<div>temperature: {props.weather.data.temperature} </div>\t\n\t\t\t</>\n\t\t)\n\t}\n\n\tif (countriesToShow().length===1) {\n\t\treturn (showData(countriesToShow()[0]))\n\t}\n\telse if (props.showButton!==\"\"){\n\t\treturn (showData(countriesToShow().filter(element => element.name===props.showButton )[0]))\n\t}\n\telse if (countriesToShow().length<=10){\n\t\treturn(\n\t\t\t<div>{countriesToShow().map((element) => <li key={element.name}>{element.name} <button onClick={() => props.setShowButton(element.name)}>show</button></li>)} </div>\n\t\t)\n\t}\n\telse if (countriesToShow().length>10) {\n\t\treturn(\n\t\t\t<div>Too many matches, specify another filter</div>\n\t\t)\n\t}\n}\n\nconst App = () => {\n\tconst [filterPar,setFilterPar] = useState(\"\")\n\tconst [countries,setCountries] = useState([])\n\tconst [showButton, setShowButton] = useState(\"\")\n\tconst [weather, setWeather] = useState([])\n\n\tconst getCountries = () => {\n\t\taxios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data))\n\t}\n\n\tconst changeFilterPar = (event) =>{\n\t\tsetFilterPar(event.target.value)\n\t\tsetShowButton(\"\")\n\t}\n\n\tuseEffect(getCountries, [])\n\n\treturn(\n\t\t<div>\n\t\t\t<div>find countries <input value={filterPar} onChange={changeFilterPar}/></div>\n\t\t\t<Content countries={countries} filterPar={filterPar} setShowButton={setShowButton} showButton={showButton} setWeather={setWeather} weather={weather}/>\n\t\t</div>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}