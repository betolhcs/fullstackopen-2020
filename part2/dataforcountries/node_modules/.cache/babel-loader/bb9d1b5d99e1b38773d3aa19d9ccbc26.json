{"ast":null,"code":"var _jsxFileName = \"/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Content = props => {\n  const countriesToShow = () => {\n    if (props.filterPar === \"\") {\n      return props.countries;\n    } else {\n      let filterParUpper = props.filterPar.toUpperCase();\n      let newlist = props.countries.filter(element => element.name.toUpperCase().search(filterParUpper) > -1);\n      return newlist;\n    }\n  };\n\n  if (countriesToShow().length <= 10 && countriesToShow().length !== 1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 4\n      }\n    }, countriesToShow().map(element => /*#__PURE__*/React.createElement(\"li\", {\n      id: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 45\n      }\n    }, element.name)));\n  } else if (countriesToShow().length > 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, \"Too many matches, specify another filter\");\n  } else if (countriesToShow().length === 1) {\n    let country = countriesToShow()[0];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    }, country.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }\n    }, \"capital \", country.capital), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }, \"population \", country.population), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }\n    }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, country.languages.map(element => /*#__PURE__*/React.createElement(\"li\", {\n      id: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 39\n      }\n    }, element.name))));\n  }\n};\n\nconst App = () => {\n  const [filterPar, setFilterPar] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n\n  const getCountries = () => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data));\n  };\n\n  const changeFilterPar = event => {\n    setFilterPar(event.target.value);\n  };\n\n  useEffect(getCountries, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: filterPar,\n    onChange: changeFilterPar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    countries: countries,\n    filterPar: filterPar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js"],"names":["React","useState","useEffect","axios","Content","props","countriesToShow","filterPar","countries","filterParUpper","toUpperCase","newlist","filter","element","name","search","length","map","country","capital","population","languages","App","setFilterPar","setCountries","getCountries","get","then","response","data","changeFilterPar","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Content = (props) =>{\n\tconst countriesToShow = () =>{\n\t\tif (props.filterPar===\"\") {\n\t\t\treturn props.countries\n\t\t}\n\t\telse {\n\t\t\tlet filterParUpper = props.filterPar.toUpperCase()\n\t\t\tlet newlist = props.countries.filter((element) => element.name.toUpperCase().search(filterParUpper)>-1)\n\t\t\treturn newlist\n\t\t}\n\t}\n\n\tif (countriesToShow().length<=10 && countriesToShow().length!==1){\n\t\treturn(\n\t\t\t<div>{countriesToShow().map((element) => <li id={element.name}>{element.name}</li>)}</div>\n\t\t)\n\t}\n\telse if (countriesToShow().length>10) {\n\t\treturn(\n\t\t\t<div>Too many matches, specify another filter</div>\n\t\t)\n\t}\n\telse if (countriesToShow().length===1) {\n\t\tlet country = countriesToShow()[0]\n\t\treturn(\n\t\t\t<>\n\t\t\t<h1>{country.name}</h1>\n\t\t\t<div>capital {country.capital}</div>\n\t\t\t<div>population {country.population}</div>\n\t\t\t<h2>languages</h2>\n\t\t\t<ul>\n\t\t\t\t{country.languages.map(element => <li id={element.name}>{element.name}</li>)}\n\t\t\t</ul>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst App = () => {\n\tconst [filterPar,setFilterPar] = useState(\"\")\n\tconst [countries,setCountries] = useState([])\n\n\tconst getCountries = () => {\n\t\taxios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data))\n\t}\n\n\tconst changeFilterPar = (event) =>{\n\t\tsetFilterPar(event.target.value)\n\t}\n\n\tuseEffect(getCountries, [])\n\n\treturn(\n\t\t<div>\n\t\t\t<div>find countries <input value={filterPar} onChange={changeFilterPar}/></div>\n\t\t\t<Content countries={countries} filterPar={filterPar}/>\n\t\t</div>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}