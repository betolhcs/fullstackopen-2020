{"ast":null,"code":"var _jsxFileName = \"/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [filterPar, setFilterPar] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n\n  const getCountries = () => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data));\n  };\n\n  const changeFilterPar = event => {\n    setFilterPar(event.target.value);\n  };\n\n  const countriesToShow = () => {\n    if (filterPar === \"\") {\n      return countries;\n    } else {\n      let filterParUpper = filterPar.toUpperCase();\n      let newlist = countries.filter(element => element.name.toUpperCase().search(filterParUpper) > -1);\n      return newlist;\n    }\n  };\n\n  useEffect(getCountries, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: filterPar,\n    onChange: changeFilterPar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }\n  })), countriesToShow().map(element => /*#__PURE__*/React.createElement(\"li\", {\n    id: element.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 40\n    }\n  }, element.name)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/beto/Documentos/FullStack/part2/dataforcountries/src/App.js"],"names":["React","useState","useEffect","axios","App","filterPar","setFilterPar","countries","setCountries","getCountries","get","then","response","data","changeFilterPar","event","target","value","countriesToShow","filterParUpper","toUpperCase","newlist","filter","element","name","search","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AAC1BN,IAAAA,KAAK,CAACO,GAAN,CAAU,sCAAV,EAAkDC,IAAlD,CAAuDC,QAAQ,IAAIJ,YAAY,CAACI,QAAQ,CAACC,IAAV,CAA/E;AACA,GAFD;;AAIA,QAAMC,eAAe,GAAIC,KAAD,IAAU;AACjCT,IAAAA,YAAY,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACA,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAK;AAC5B,QAAIb,SAAS,KAAG,EAAhB,EAAoB;AACnB,aAAOE,SAAP;AACA,KAFD,MAGK;AACJ,UAAIY,cAAc,GAAGd,SAAS,CAACe,WAAV,EAArB;AACA,UAAIC,OAAO,GAAGd,SAAS,CAACe,MAAV,CAAkBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaJ,WAAb,GAA2BK,MAA3B,CAAkCN,cAAlC,IAAkD,CAAC,CAAjF,CAAd;AACA,aAAOE,OAAP;AACA;AACD,GATD;;AAWAnB,EAAAA,SAAS,CAACO,YAAD,EAAe,EAAf,CAAT;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAoB;AAAO,IAAA,KAAK,EAAEJ,SAAd;AAAyB,IAAA,QAAQ,EAAES,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CADD,EAEEI,eAAe,GAAGQ,GAAlB,CAAuBH,OAAD,iBAAa;AAAI,IAAA,EAAE,EAAEA,OAAO,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,OAAO,CAACC,IAA/B,CAAnC,CAFF,CADD;AAMA;;AAED,eAAepB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nfunction App() {\n\tconst [filterPar,setFilterPar] = useState(\"\")\n\tconst [countries,setCountries] = useState([])\n\n\tconst getCountries = () => {\n\t\taxios.get(\"https://restcountries.eu/rest/v2/all\").then(response => setCountries(response.data))\n\t}\n\n\tconst changeFilterPar = (event) =>{\n\t\tsetFilterPar(event.target.value)\n\t}\n\n\tconst countriesToShow = () =>{\n\t\tif (filterPar===\"\") {\n\t\t\treturn countries\n\t\t}\n\t\telse {\n\t\t\tlet filterParUpper = filterPar.toUpperCase()\n\t\t\tlet newlist = countries.filter((element) => element.name.toUpperCase().search(filterParUpper)>-1)\n\t\t\treturn newlist\n\t\t}\n\t}\n\n\tuseEffect(getCountries, [])\n\n\treturn(\n\t\t<div>\n\t\t\t<div>find countries <input value={filterPar} onChange={changeFilterPar}/></div>\n\t\t\t{countriesToShow().map((element) => <li id={element.name}>{element.name}</li>)}\n\t\t</div>\n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}